---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: horizon-web
  namespace: default
  labels:
    app: horizon
    component: web
    layer: application
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: horizon
      component: web
      layer: application
  template:
    metadata:
      labels:
        app: horizon
        component: web
        layer: application
      name: horizon-web
    spec:
      containers:
        - name: horizon-web
          env:
            - name: PORT
              value: "8080"
            - name: TRACE_AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: horizon-environment
          image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/horizon:staging
          imagePullPolicy: Always
          ports:
            - name: horizon-http
              containerPort: 8080
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              memory: 500Mi
          readinessProbe:
            httpGet:
              port: horizon-http
              path: /robots.txt
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
      dnsPolicy: Default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                      - foreground
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: horizon-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: horizon-web
  minReplicas: 2
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: horizon
    component: web
    layer: application
  name: horizon-web-internal
  namespace: default
spec:
  ports:
    - port: 8080
      protocol: TCP
      name: http
      targetPort: 8080
  selector:
    app: horizon
    layer: application
    component: web
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: horizon
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ cloudflareIpSourceRanges|join(',') }}"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  ingressClassName: nginx
  rules:
    - host: releases-staging.artsy.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              serviceName: horizon-web-internal
              servicePort: http

---
apiVersion: batch/v2alpha1
kind: CronJob
metadata:
  name: horizon-refresh-comparisons-cron
spec:
  schedule: "0 9 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: horizon-refresh-comparisons-cron
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/horizon:staging
              args: ["bundle", "exec", "rake", "cron:refresh_comparisons"]
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: horizon-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                      - key: tier
                        operator: In
                        values:
                          - background
---
apiVersion: batch/v2alpha1
kind: CronJob
metadata:
  name: horizon-refresh-components-cron
spec:
  schedule: "0 0 * * 1"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: horizon-refresh-components-cron
              image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/horizon:staging
              args: ["bundle", "exec", "rake", "cron:refresh_components"]
              imagePullPolicy: Always
              envFrom:
                - configMapRef:
                    name: horizon-environment
          restartPolicy: Never
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 1
                  preference:
                    matchExpressions:
                      - key: tier
                        operator: In
                        values:
                          - background
