apiVersion: apps/v1
kind: Deployment
metadata:
  name: horizon-web
  namespace: default
  labels:
    app: horizon
    component: web
    layer: application
    app.kubernetes.io/version: staging
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: horizon
      component: web
      layer: application
  template:
    metadata:
      labels:
        app: horizon
        component: web
        layer: application
        app.kubernetes.io/version: staging
      name: horizon-web
    spec:
      initContainers:
      - name: setenv
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:staging
        imagePullPolicy: Always
        command:
        - python
        - src/load/load.py
        - kubernetes
        - staging
        - horizon
        envFrom:
        - configMapRef:
            name: secrets-config
        volumeMounts:
        - name: secrets
          mountPath: /secrets
      containers:
      - name: horizon-web
        env:
        - name: PORT
          value: '8080'
        - name: PUMA_WORKERS
          value: '1'
        - name: PUMA_THREAD_MIN
          value: '5'
        - name: PUMA_THREAD_MAX
          value: '5'
        - name: RAILS_SERVE_STATIC_FILES
          value: 'true'
        - name: RAILS_LOG_TO_STDOUT
          value: 'true'
        - name: PUMA_BIND
          value: tcp://0.0.0.0:8080
        - name: MALLOC_ARENA_MAX
          value: '2'
        - name: DATADOG_TRACE_AGENT_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        envFrom:
        - configMapRef:
            name: secrets-config
        - configMapRef:
            name: horizon-environment
        volumeMounts:
        - name: secrets
          mountPath: /secrets
          readOnly: true
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/horizon:staging
        imagePullPolicy: Always
        ports:
        - name: horizon-http
          containerPort: 8080
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            memory: 512Mi
        readinessProbe:
          httpGet:
            port: horizon-http
            path: /robots.txt
            httpHeaders:
            - name: X-Forwarded-Proto
              value: https
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command:
              - sh
              - -c
              - sleep 5
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: '1'
      serviceAccountName: horizon
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tier
                operator: In
                values:
                - foreground
      volumes:
      - name: secrets
        emptyDir: {}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: horizon-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: horizon-web
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 70
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: horizon
    component: web
    layer: application
  name: horizon-web-internal
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http
    targetPort: horizon-http
  selector:
    app: horizon
    layer: application
    component: web
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: horizon
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ cloudflareIpSourceRanges|join(',') }}
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
spec:
  ingressClassName: nginx
  rules:
  - host: releases-staging.artsy.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: horizon-web-internal
            port:
              name: http
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: horizon-refresh-comparisons-cron-data
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 10Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: horizon-refresh-comparisons-cron
spec:
  schedule: 0 9 * * *
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:staging
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - staging
            - horizon
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          - name: fix-the-volume-permission
            image: busybox
            command:
            - /bin/sh
            - -c
            - |
              DEPLOY_USER_UID=1001
              MOUNT_DIR=/home/deploy/data
              MOUNT_DIR_UID=$(stat -c %u $MOUNT_DIR)
              if [ "$MOUNT_DIR_UID" != "$DEPLOY_USER_UID" ]
              then
                chown -R "$DEPLOY_USER_UID":"$DEPLOY_USER_UID" $MOUNT_DIR
              fi
            securityContext:
              privileged: true
            volumeMounts:
            - name: data
              mountPath: /home/deploy/data
          containers:
          - name: horizon-refresh-comparisons-cron
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/horizon:staging
            imagePullPolicy: Always
            args:
            - bundle
            - exec
            - rake
            - cron:refresh_comparisons
            resources:
              requests:
                cpu: 300m
                memory: 500Mi
              limits:
                cpu: 500m
                memory: 1Gi
            volumeMounts:
            - name: data
              mountPath: /home/deploy/data
            - name: secrets
              mountPath: /secrets
              readOnly: true
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: horizon-environment
            env:
            - name: WORKING_DIR
              value: /home/deploy/data
          restartPolicy: Never
          volumes:
          - name: data
            persistentVolumeClaim:
              claimName: horizon-refresh-comparisons-cron-data
          - name: secrets
            emptyDir: {}
          serviceAccountName: horizon
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - api
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: horizon-refresh-components-cron
spec:
  schedule: 0 0 * * 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 3
      template:
        metadata:
          annotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
        spec:
          initContainers:
          - name: setenv
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:staging
            imagePullPolicy: Always
            command:
            - python
            - src/load/load.py
            - kubernetes
            - staging
            - horizon
            envFrom:
            - configMapRef:
                name: secrets-config
            volumeMounts:
            - name: secrets
              mountPath: /secrets
          containers:
          - name: horizon-refresh-components-cron
            image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/horizon:staging
            args:
            - bundle
            - exec
            - rake
            - cron:refresh_components
            imagePullPolicy: Always
            envFrom:
            - configMapRef:
                name: secrets-config
            - configMapRef:
                name: horizon-environment
            volumeMounts:
            - name: secrets
              mountPath: /secrets
              readOnly: true
          restartPolicy: Never
          serviceAccountName: horizon
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: tier
                    operator: In
                    values:
                    - background
          volumes:
          - name: secrets
            emptyDir: {}
