#!/bin/sh

# Exit if any subcommand fails
set -e

echo "brew bundle install..."
brew bundle --file=- <<EOF
brew 'postgresql@14', restart_service: true
EOF

if command -v mise >/dev/null; then
  echo "Installing language dependencies with mise"
  mise install
else
  echo "Skipping language dependencies installation (mise not found)"
fi

echo "install the bundler version locked in Gemfile.lock, if any..."
LOCKED_BUNDLER_VERSION=$(grep -A2 'BUNDLED WITH' Gemfile.lock | tail -1 | awk '{print $1}')
if [[ "$LOCKED_BUNDLER_VERSION" != '' ]]; then
  gem install bundler:"$LOCKED_BUNDLER_VERSION"
fi

echo "install lastest bundler version, if at this point bundler is still missing..."
if ! command -v bundler > /dev/null; then
  gem install bundler
fi

echo "foreman install, if required..."
if ! command -v foreman > /dev/null; then
  gem install foreman
fi

echo "install project's gem dependencies..."
# To mitigate 'BuildError: No pg_config..' when installing pg gem.
bundle config build.pg --with-pg-config=$(brew --prefix)/Cellar/postgresql@14/$(brew info postgresql@14 | grep $(brew --prefix)/Cellar/postgresql@14 | cut -d' ' -f1 | xargs basename)/bin/pg_config
bundle install > /dev/null

if command -v yarn >/dev/null; then
  echo "Yarn is already installed"
else
  echo "Installing yarn..."
  npm install -g yarn
fi

echo "download .env.shared (common local dev config) from S3..."
aws s3 cp s3://artsy-citadel/horizon/.env.shared ./

echo "initialize .env (custom local dev config) from .env.example, if required..."
if [ ! -e ".env" ]; then
  cp .env.example .env
fi

echo "db setup..."
foreman run bundle exec rake db:setup db:seed

echo "
Your local dev environment has been set up based on:
  - sane defaults in config/initializers/_config.rb
  - common local dev config in .env.shared
  - custom local dev config in .env

To launch the server, run:

  foreman start
"
